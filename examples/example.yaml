version: '3.7'

configs:
  caddy-basic-content:
    file: ./Caddyfile
    labels:
        caddy:

services:
  caddy:
    image: lucaslorentz/caddy-docker-proxy:alpine
    ports:
      - 8080:80
      - 4443:443
    networks:
      - caddy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      placement:
        constraints:
          - node.role == manager
      replicas: ${CADDY_REPLICAS:-1}
      restart_policy:
        condition: any
      resources:
        reservations:
          cpus: '0.1'
          memory: 200M

  whoami0:
    image: brndnmtthws/nginx-echo-headers
    networks:
      - caddy
    deploy:
      labels:
        caddy.address: whoami0.example.com
        caddy.sourcepath: "/a"
        caddy.targetport: "8080"
        caddy.targetpath: "/abc"
        caddy.reverse_proxy.health_path: "/health"
        caddy.tls: "internal"

  whoami1:
    image: jwilder/whoami
    networks:
      - caddy
    deploy:
      labels:
        caddy.address: whoami1.example.com
        caddy.targetport: "8000"
        caddy.tls: "internal"

  whoami2:
    image: jwilder/whoami
    networks:
      - caddy
    labels:
      caddy.address: whoami2.example.com
      caddy.targetport: "8000"
      caddy.tls: "internal"

  whoami3:
    image: jwilder/whoami
    networks:
      - caddy
    labels:
      caddy.address: whoami3.example.com
      caddy.targetport: "8000"
      caddy.tls: "internal"

networks:
  caddy:
    driver: overlay
    external: ${EXTERNAL_NETWORK:-false}